scalar Date

type User {
    id: ID!
    first_name:     String!
    last_name:      String!
    email:          String!
    username:       String!
    password:       String!
    birthday:       String!
    gender:         Boolean!
    preferences:    String!
    pics:           String!
    token:          String!
    location:       String!
    verified:       String!
}

input RegisterUserInput {
    username:   String!
    email:      String!
    password:   String!
}

input ProceedRegisterationUserInput {
    first_name:     String!
    last_name:      String!
    birthday:       String!
    gender:         Boolean!
    preferences:    String!
    pics:           String!
    location:       String!
    token:          String!
}

input UpdateUserInfoInput {
    first_name:     String!
    last_name:      String!
    birthday:       String!
    preferences:    String!
    pics:           String!
    location:       String!
    token:          String!
}

input LoginUserInput {
    username: String!
    password: String!
}

input SendEmailVerificationInput {
    email: String!
}

input ResetUserPassInput {
    password: String!
    token: String!
}

type Query {
    users: [User!]!
    user(id: ID!): User
    posts: [Post!]!
    post(id: ID!): Post
}

type Mutation {

    # auth
    registerUser(input: RegisterUserInput!): User
    loginUser(input: LoginUserInput!): User
    sendEmailVerification(input: SendEmailVerificationInput!): User
    resetUserPassword(input: ResetUserPassInput!): User
    resetUserPassword(input: ResetUserPassInput!): User

    # user
    proceedRegistrationUser(input: ProceedRegisterationUserInput!): User
    updateUserInfo(input: UpdateUserInfoInput!): User
}

type Post {
    id:         ID!
    title:      String!
    content:    String!
    user_id:    ID!
}
